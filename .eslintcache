[{"/Users/edgardelvalle/working/react/moviesearch3/src/reducers/index.js":"1","/Users/edgardelvalle/working/react/moviesearch3/src/actions/index.js":"2","/Users/edgardelvalle/working/react/moviesearch3/src/pages/Discovery.jsx":"3","/Users/edgardelvalle/working/react/moviesearch3/src/components/MovieDetail.jsx":"4","/Users/edgardelvalle/working/react/moviesearch3/src/components/Loader.jsx":"5","/Users/edgardelvalle/working/react/moviesearch3/src/components/MovieList.jsx":"6","/Users/edgardelvalle/working/react/moviesearch3/src/pages/App.jsx":"7"},{"size":392,"mtime":1607330716987,"results":"8","hashOfConfig":"9"},{"size":2724,"mtime":1607363723500,"results":"10","hashOfConfig":"9"},{"size":2589,"mtime":1607563638874,"results":"11","hashOfConfig":"9"},{"size":3472,"mtime":1607560753094,"results":"12","hashOfConfig":"9"},{"size":957,"mtime":1607548386432,"results":"13","hashOfConfig":"9"},{"size":420,"mtime":1607562965742,"results":"14","hashOfConfig":"9"},{"size":1557,"mtime":1607574621131,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cdzwsw",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edgardelvalle/working/react/moviesearch3/src/reducers/index.js",[],"/Users/edgardelvalle/working/react/moviesearch3/src/actions/index.js",[],"/Users/edgardelvalle/working/react/moviesearch3/src/pages/Discovery.jsx",["32","33"],"import MovieList from '../components/MovieList';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getDiscoverMovies } from '../actions';\nimport { getGenres } from '../actions';\nimport { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst GenreList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  button {\n    font-size: 0.8rem;\n    background: none;\n    border: none;\n    box-shadow: none;\n    &:hover {\n      cursor: pointer;\n      color: grey;\n    }\n  }\n`;\n\nconst Subheader = styled.span`\n  font-size: 1rem;\n  color: gray;\n  margin-left: 5px;\n  font-weight: 400;\n`;\n\nconst Discovery = props => {\n  const [genreFilter, setGenreFilter] = useState({});\n  const [isFiltered, setIsFiltered] = useState(false);\n  const { discover } = useParams();\n\n  const renderGenres = props.genres.loading ? (\n    <div>Loading Genres</div>\n  ) : (\n    props.genres.genres.map(genre => (\n      <li key={genre.id}>\n        <button\n          className={genreFilter.name == genre.name ? 'active' : ''}\n          onClick={() => {\n            setIsFiltered(true);\n            setGenreFilter(genre);\n          }}\n        >\n          {genre.name}\n        </button>\n      </li>\n    ))\n  );\n\n  const filteredMovies = props.movies.loading ? (\n    <Loader />\n  ) : (\n    props.movies.results.filter(movies =>\n      movies.genre_ids.includes(genreFilter.id)\n    )\n  );\n\n  const header = discover.split('_').join(' ').toUpperCase();\n\n  useEffect(() => {\n    props.getDiscoverMovies(discover);\n    props.getGenres();\n  }, [discover]);\n\n  if (props.movies.loading) {\n    return <Loader />;\n  } else if (props.movies.results === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      <div>\n        <Helmet>{discover}</Helmet>\n        <h1>\n          {header}\n          <Subheader> {isFiltered && `> ${genreFilter.name}`}</Subheader>\n        </h1>\n        <div>\n          <GenreList>\n            <li>\n              <button onClick={() => setIsFiltered(false)}>All</button>\n            </li>\n            {renderGenres}\n          </GenreList>\n        </div>\n\n        <MovieList\n          movies={isFiltered ? filteredMovies : props.movies.results}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies, genres: state.genres };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscoverMovies,\n  getGenres,\n})(Discovery);\n",["34","35"],"/Users/edgardelvalle/working/react/moviesearch3/src/components/MovieDetail.jsx",[],"/Users/edgardelvalle/working/react/moviesearch3/src/components/Loader.jsx",[],"/Users/edgardelvalle/working/react/moviesearch3/src/components/MovieList.jsx",[],"/Users/edgardelvalle/working/react/moviesearch3/src/pages/App.jsx",["36"],{"ruleId":"37","severity":1,"message":"38","line":49,"column":39,"nodeType":"39","messageId":"40","endLine":49,"endColumn":41},{"ruleId":"41","severity":1,"message":"42","line":74,"column":6,"nodeType":"43","endLine":74,"endColumn":16,"suggestions":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":11,"column":10,"nodeType":"51","messageId":"52","endLine":11,"endColumn":16},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["53"],"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar",{"desc":"56","fix":"57"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [discover, props]",{"range":"58","text":"59"},[1724,1734],"[discover, props]"]