{"version":3,"sources":["components/SearchBar.jsx","components/MovieCard.jsx","components/MovieList.jsx","api/tmdb.js","actions/index.js","components/Loader.jsx","pages/Search.jsx","pages/Discovery.jsx","components/Discover.jsx","pages/Genre.jsx","components/MovieDetail.jsx","pages/Movie.jsx","pages/App.jsx","reducers/genreReducer.js","reducers/movieDetailReducer.js","reducers/moviesReducer.js","reducers/collectionReducer.js","reducers/trailersReducer.js","reducers/index.js","index.js"],"names":["SearchWrapper","styled","div","Input","input","SearchBar","history","useHistory","useState","query","setQuery","onSubmit","e","preventDefault","push","placeholder","type","value","onChange","target","MovieCard","movie","Container","motion","Poster","img","Title","h1","whileHover","scale","to","id","src","poster_path","alt","title","Cards","MovieList","renderMovies","movies","map","axios","create","baseURL","params","api_key","FETCH_MOVIES_LOADING","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_SEARCH","FETCH_DISCOVER_LOADING","FETCH_DISCOVER_SUCCESS","FETCH_DISCOVER_SEARCH","FETCH_GENRES_LOADING","FETCH_GENRES","FETCH_GENRES_SUCCESS","FETCH_MOVIEDETAIL_LOADING","FETCH_MOVIEDETAIL","FETCH_MOVIEDETAIL_SUCCESS","FETCH_COLLECTION_LOADING","FETCH_COLLECTION","FETCH_COLLECTION_SUCCESS","FETCH_TRAILERS_LOADING","FETCH_TRAILERS","FETCH_TRAILERS_SUCCESS","require","default","Loader","className","connect","state","getSearchedMovie","dispatch","a","tmdb","get","response","payload","data","clearMovies","props","searchedMovies","useParams","useEffect","loading","Helmet","toUpperCase","results","GenreList","ul","Subheader","span","genres","getDiscoverMovies","discover","getGenres","genreFilter","setGenreFilter","isFiltered","setIsFiltered","renderGenres","genre","name","onClick","filteredMovies","filter","genre_ids","includes","header","split","join","List","ListItem","li","Discover","activeClassName","Genre","MovieDetail","collection","trailers","Tagline","h2","PosterContainer","Details","CollectionContainer","belongs_to_collection","original_title","backdrop_path","tagline","runtime","vote_average","release_date","overview","Collection","parts","Math","floor","moment","format","trailer","href","key","console","log","movieDetail","getMovieDetails","getCollection","clearMovie","getTrailers","createBrowserHistory","DiscoverWrapper","App","exact","path","initialState","error","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe71cbc0.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: center;\n`;\nconst Input = styled.input`\n  position: absolute;\n  bottom: -17px;\n\n  background: url('https://static.tumblr.com/ftv85bp/MIXmud4tx/search-icon.png')\n    no-repeat 9px center;\n  border: none;\n  padding: 9px 5px 9px 32px;\n  width: 30px;\n  color: transparent;\n  cursor: pointer;\n  outline: none;\n  border-radius: 10em;\n  transition: all 0.5s;\n\n  :focus {\n    border: solid 1px #ccc;\n    width: 170px;\n    padding-left: 32px;\n    color: #000;\n    background-color: #fff;\n    cursor: auto;\n  }\n`;\n\nconst SearchBar = () => {\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n\n  function handleSubmitForm(e) {\n    e.preventDefault();\n    if (query) {\n      history.push(`/moviesearch3/search/${query}`);\n      setQuery('');\n    }\n  }\n\n  return (\n    <SearchWrapper>\n      <form onSubmit={handleSubmitForm}>\n        <Input\n          key=\"query\"\n          placeholder=\"Search movie\"\n          type=\"search\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </form>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchBar;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst MovieCard = ({ movie }) => {\n  if (!movie) {\n    return <div>Movie not available</div>;\n  }\n\n  const Container = styled(motion.div)`\n    position: relative;\n    width: auto;\n    width: 200px;\n\n    height: 320px;\n    margin: 10px;\n    overflow: hidden;\n    background-size: cover;\n    transition: visibility ease-in-out 2ms;\n    background-color: gray;\n    border-radius: 20px;\n\n    a {\n      text-decoration: none;\n      color: white;\n    }\n    &:hover {\n      z-index: 1000;\n      box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n    }\n\n    &:hover #title {\n      visibility: visible;\n      opacity: 1;\n    }\n  `;\n\n  const Poster = styled.img`\n    width: 100%;\n    height: 100%;\n  `;\n\n  const Title = styled.h1`\n    position: absolute;\n    font-size: 1vw;\n    margin: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: 0;\n\n    padding: 10px;\n\n    background-image: linear-gradient(0deg, black, transparent);\n    overflow: hidden;\n    visibility: hidden;\n    opacity: 0;\n  `;\n\n  return (\n    <Container whileHover={{ scale: 1.05 }}>\n      <Link to={`/moviesearch3/movie/${movie.id}`}>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n\n        <Title id=\"title\">{movie.title}</Title>\n      </Link>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport MovieCard from './MovieCard';\n\nconst Cards = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nconst MovieList = ({ movies }) => {\n  const renderMovies = movies.map(movie => {\n    return <MovieCard movie={movie} />;\n  });\n\n  return <Cards>{renderMovies}</Cards>;\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '18693dbf2e013e193207cae1f0af5059',\n    // api_key: process.env.REACT_APP_API_KEY,\n  },\n});\n","import tmdb from '../api/tmdb';\n\nexport const FETCH_MOVIES_LOADING = 'FETCH_MOVIES_LOADING';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const FETCH_MOVIES_SEARCH = 'FETCH_MOVIES_SEARCH';\n\nexport const FETCH_DISCOVER_LOADING = 'FETCH_DISCOVER_LOADING';\nexport const FETCH_DISCOVER_SUCCESS = 'FETCH_DISCOVER_SUCCESS';\nexport const FETCH_DISCOVER_ERROR = 'FETCH_DISCOVER_ERROR';\nexport const FETCH_DISCOVER_SEARCH = 'FETCH_DISCOVER_SEARCH';\n\nexport const FETCH_GENRES_LOADING = 'FETCH_GENRES_LOADING';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\n\nexport const FETCH_MOVIEDETAIL_LOADING = 'FETCH_MOVIEDETAIL_LOADING';\nexport const FETCH_MOVIEDETAIL = 'FETCH_MOVIEDETAIL';\nexport const FETCH_MOVIEDETAIL_SUCCESS = 'FETCH_MOVIEDETAIL_SUCCESS';\n\nexport const FETCH_COLLECTION_LOADING = 'FETCH_COLLECTION_LOADING';\nexport const FETCH_COLLECTION = 'FETCH_COLLECTION';\nexport const FETCH_COLLECTION_SUCCESS = 'FETCH_COLLECTION_SUCCESS';\n\nexport const FETCH_TRAILERS_LOADING = 'FETCH_TRAILERS_LOADING';\nexport const FETCH_TRAILERS = 'FETCH_TRAILERS';\nexport const FETCH_TRAILERS_SUCCESS = 'FETCH_TRAILERS_SUCCESS';\n\nexport const getSearchedMovie = query => async dispatch => {\n  dispatch({ type: FETCH_MOVIES_LOADING });\n  const response = await tmdb.get('/search/movie', {\n    params: { query: query },\n  });\n  await dispatch({\n    type: FETCH_MOVIES_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_MOVIES_SUCCESS,\n  });\n};\n\nexport const getDiscoverMovies = discover => async dispatch => {\n  dispatch({ type: FETCH_DISCOVER_LOADING });\n  const response = await tmdb.get(`/movie/${discover}`);\n  await dispatch({\n    type: FETCH_DISCOVER_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_DISCOVER_SUCCESS,\n  });\n};\n\nexport const getGenres = () => async dispatch => {\n  dispatch({ type: FETCH_GENRES_LOADING });\n  const response = await tmdb.get('/genre/movie/list');\n  await dispatch({\n    type: FETCH_GENRES,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_GENRES_SUCCESS,\n  });\n};\n\nexport const getMovieDetails = id => async dispatch => {\n  dispatch({ type: FETCH_MOVIEDETAIL_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}`);\n  await dispatch({ type: FETCH_MOVIEDETAIL, payload: response.data });\n\n  dispatch({ type: FETCH_MOVIEDETAIL_SUCCESS });\n};\n\nexport const getCollection = id => async dispatch => {\n  dispatch({ type: FETCH_COLLECTION_LOADING });\n\n  const response = await tmdb.get(`/collection/${id}`);\n  await dispatch({ type: FETCH_COLLECTION, payload: response.data });\n\n  dispatch({ type: FETCH_COLLECTION_SUCCESS });\n};\n\nexport const getTrailers = id => async dispatch => {\n  dispatch({ type: FETCH_TRAILERS_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}/videos`);\n  await dispatch({ type: FETCH_TRAILERS, payload: response.data });\n\n  dispatch({ type: FETCH_TRAILERS_SUCCESS });\n};\n\nexport const clearMovies = () => {\n  return { type: FETCH_MOVIES_LOADING };\n};\n\nexport const clearMovie = () => {\n  return { type: FETCH_MOVIEDETAIL_LOADING };\n};\n","const { default: styled } = require('styled-components');\n\nconst Container = styled.div`\n  div {\n    display: inline-block;\n    background-color: black;\n    height: 10px;\n    width: 10px;\n    border-radius: 10px;\n    margin: 10px;\n  }\n\n  @keyframes jump {\n    from {\n      transform: translateY(0);\n    }\n    from {\n      transform: translateY(10);\n    }\n  }\n\n  .dot {\n    position: relative;\n  }\n\n  .dot-one {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n\n  .dot-two {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n  .dot-three {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n`;\n\nconst Loader = () => {\n  return (\n    <Container className=\"dot-array\">\n      <div className=\"dot dot-one\"></div>\n      <div className=\"dot dot-two\"></div>\n      <div className=\"dot dot-three\"></div>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MovieList from '../components/MovieList';\nimport { getSearchedMovie, clearMovies } from '../actions/index';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst Search = props => {\n  const { movies } = props;\n  const { searchedMovies } = useParams();\n\n  useEffect(() => {\n    props.getSearchedMovie(searchedMovies);\n    return () => props.clearMovies();\n  }, [searchedMovies]);\n\n  if (movies.loading) {\n    return <Loader />;\n  } else if (movies === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      // <Loader />\n      <div>\n        <Helmet>\n          <title>{`${searchedMovies} - search results`}</title>\n        </Helmet>\n        <h1>{searchedMovies.toUpperCase()}</h1>\n        <MovieList movies={movies.results} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies };\n};\n\nexport default connect(mapStateToProps, { getSearchedMovie, clearMovies })(\n  Search\n);\n","import MovieList from '../components/MovieList';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getDiscoverMovies } from '../actions';\nimport { getGenres } from '../actions';\nimport { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst GenreList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  button {\n    font-size: 0.8rem;\n    background: none;\n    border: none;\n    box-shadow: none;\n    &:hover {\n      cursor: pointer;\n      color: grey;\n    }\n  }\n`;\n\nconst Subheader = styled.span`\n  font-size: 1rem;\n  color: gray;\n  margin-left: 5px;\n  font-weight: 400;\n`;\n\nconst Discovery = props => {\n  const [genreFilter, setGenreFilter] = useState({});\n  const [isFiltered, setIsFiltered] = useState(false);\n  const { discover } = useParams();\n\n  const renderGenres = props.genres.loading ? (\n    <div>Loading Genres</div>\n  ) : (\n    props.genres.genres.map(genre => (\n      <li key={genre.id}>\n        <button\n          className={genreFilter.name == genre.name ? 'active' : ''}\n          onClick={() => {\n            setIsFiltered(true);\n            setGenreFilter(genre);\n          }}\n        >\n          {genre.name}\n        </button>\n      </li>\n    ))\n  );\n\n  const filteredMovies = props.movies.loading ? (\n    <Loader />\n  ) : (\n    props.movies.results.filter(movies =>\n      movies.genre_ids.includes(genreFilter.id)\n    )\n  );\n\n  const header = discover.split('_').join(' ').toUpperCase();\n\n  useEffect(() => {\n    props.getDiscoverMovies(discover);\n    props.getGenres();\n  }, [discover]);\n\n  if (props.movies.loading) {\n    return <Loader />;\n  } else if (props.movies.results === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      <div>\n        <Helmet>{discover}</Helmet>\n        <h1>\n          {header}\n          <Subheader> {isFiltered && `> ${genreFilter.name}`}</Subheader>\n        </h1>\n        <div>\n          <GenreList>\n            <li>\n              <button onClick={() => setIsFiltered(false)}>All</button>\n            </li>\n            {renderGenres}\n          </GenreList>\n        </div>\n\n        <MovieList\n          movies={isFiltered ? filteredMovies : props.movies.results}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies, genres: state.genres };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscoverMovies,\n  getGenres,\n})(Discovery);\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 15px;\n  display: flex;\n  width: 30%;\n  justify-content: space-around;\n`;\n\nconst ListItem = styled.li`\n  transition: all 0.25s;\n\n  font-size: 0.9rem;\n  font-weight: 300;\n  a {\n    text-decoration: none;\n\n    &:visited {\n      color: black;\n    }\n\n    &:hover {\n      color: grey;\n    }\n  }\n  .active {\n    color: black;\n    font-weight: 500;\n    cursor: default;\n\n    &:hover {\n      color: black;\n    }\n  }\n`;\n\nconst Discover = () => {\n  return (\n    <List>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/upcoming\">\n          Upcoming\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/top_rated\">\n          Top Rated\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/popular\">\n          Popular\n        </NavLink>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default Discover;\n","import { useParams } from 'react-router-dom';\nimport MovieList from '../components/MovieList';\n\nconst Genre = () => {\n  const { genre } = useParams();\n  return (\n    <div>\n      <h1>{genre.toUpperCase()}</h1>\n      <MovieList />\n    </div>\n  );\n};\n\nexport default Genre;\n","import styled from 'styled-components';\nimport moment from 'moment';\nimport MovieList from './MovieList';\n\nconst MovieDetail = ({ movie, collection, trailers }) => {\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .data {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 3rem;\n    }\n  `;\n\n  const Tagline = styled.h2`\n    font-size: 3vw;\n    margin: 2rem;\n    align-self: center;\n  `;\n\n  const PosterContainer = styled.div`\n    background-color: black;\n    width: auto;\n    max-width: 70vw;\n    height: auto;\n    align-self: center;\n    position: relative;\n    font-size: 2vw;\n    overflow: hidden;\n    border-radius: 20px;\n\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n  `;\n\n  const Poster = styled.img`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  `;\n\n  const Details = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    width: 70%;\n\n    h1 {\n      font-size: 2.5rem;\n    }\n\n    .poster {\n      max-width: 80%;\n      border-radius: 20px;\n    }\n\n    .movie-rating {\n      background-color: red;\n      color: white;\n      padding: 10px;\n      border-radius: 50px;\n\n      transform: translateX(-50px);\n    }\n\n    ul {\n      list-style-type: none;\n      display: flex;\n      padding: 0;\n    }\n\n    li {\n      color: #717171;\n      padding-right: 10px;\n    }\n\n    p {\n      line-height: 1.5rem;\n    }\n\n    .movie-trailer-img {\n      border-radius: 20px;\n\n      transition: all 0.25s;\n\n      &:hover {\n        scale: 1.05;\n        z-index: 1000;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n      }\n    }\n  `;\n\n  const CollectionContainer = styled.div`\n    width: 100%;\n  `;\n\n  const {\n    belongs_to_collection,\n    genres,\n    original_title,\n    backdrop_path,\n    poster_path,\n    tagline,\n    runtime,\n    vote_average,\n    release_date,\n    overview,\n    title,\n  } = movie;\n\n  const Collection = () => {\n    if (belongs_to_collection) {\n      if (collection.loading) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <CollectionContainer>\n            <h1 className=\"title\">Collection</h1>\n            <MovieList movies={collection.parts} />\n          </CollectionContainer>\n        );\n      }\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <Container>\n      <Tagline>{tagline}</Tagline>\n      <PosterContainer>\n        <Poster\n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n          alt={`${original_title} poster`}\n        />\n      </PosterContainer>\n      <div className=\"data\">\n        <Details>\n          <div>\n            <img\n              className=\"poster\"\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt=\"\"\n            />\n            <span className=\"movie-rating\">{vote_average}</span>\n          </div>\n          <div className=\"movie-details\">\n            <h1>{title}</h1>\n            <ul>\n              {genres.map(genre => {\n                return <li>{genre.name}</li>;\n              })}\n              <li className=\"info-detail\">\n                | {`${Math.floor(runtime / 60)} h ${runtime % 60} min`}\n              </li>\n              <li className=\"info-detail\">\n                | {moment(release_date).format('MMM Do, YYYY')}\n              </li>\n            </ul>\n            <p>{overview}</p>\n            <div className=\"movie-trailers\">\n              <h2>Trailers</h2>\n              <ul>\n                {trailers.map(trailer => {\n                  return (\n                    <li className=\"movie-trailer\" key={trailer.id}>\n                      <a\n                        href={`https://www.youtube.com/watch?v=${trailer.key}`}\n                      >\n                        <img\n                          className=\"movie-trailer-img\"\n                          src={`https://img.youtube.com/vi/${trailer.key}/1.jpg`}\n                          alt=\"\"\n                        />\n                      </a>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </Details>\n      </div>\n      <Collection />\n    </Container>\n  );\n};\n\nexport default MovieDetail;\n","import MovieDetail from '../components/MovieDetail';\nimport { connect } from 'react-redux';\nimport {\n  getMovieDetails,\n  clearMovie,\n  getCollection,\n  getTrailers,\n} from '../actions';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: center;\n  justify-content: space-around;\n`;\n\nconst Movie = props => {\n  const { movie, collection, trailers } = props;\n  console.log('Trailers ', trailers);\n  const { id } = useParams();\n  useEffect(() => {\n    props.getMovieDetails(id);\n    props.getTrailers(id);\n  }, [id]);\n\n  useEffect(() => {\n    if (movie.belongs_to_collection) {\n      props.getCollection(movie.belongs_to_collection.id);\n    }\n  }, [movie]);\n\n  if (movie.loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Container>\n        <Helmet>\n          <title>{movie.name}</title>\n        </Helmet>\n        <MovieDetail\n          movie={movie}\n          collection={collection}\n          trailers={trailers.results.filter(\n            trailer => trailer.type === 'Trailer'\n          )}\n        />\n      </Container>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    movie: state.movieDetail,\n    collection: state.collection,\n    trailers: state.trailers,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMovieDetails,\n  getCollection,\n  clearMovie,\n  getTrailers,\n})(Movie);\n","import SearchBar from '../components/SearchBar';\nimport { Redirect, Route, Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Search from './Search';\nimport Discovery from './Discovery';\nimport Discover from '../components/Discover';\nimport Genre from './Genre';\nimport Movie from './Movie';\n\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst history = createBrowserHistory();\n\nconst Container = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n\n  margin: 0 5%;\n`;\n\nconst DiscoverWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Router history={history}>\n        <DiscoverWrapper className=\"Nav\">\n          <Discover />\n          <SearchBar />\n        </DiscoverWrapper>\n\n        <Route exact path=\"/moviesearch3/\">\n          <Redirect to=\"/moviesearch3/discover/popular\" />\n        </Route>\n        <Route exact path=\"/moviesearch3/search/:searchedMovies\">\n          <Search />\n        </Route>\n        <Route exact path=\"/moviesearch3/movie/:id\">\n          <Movie />\n        </Route>\n        <Route exact path=\"/moviesearch3/discover/:discover\">\n          <Discovery />\n        </Route>\n        <Route exact path=\"/moviesearch3/genre/:genre\">\n          <Genre />\n        </Route>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import {\n  FETCH_GENRES_LOADING,\n  FETCH_GENRES,\n  FETCH_GENRES_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_GENRES:\n      return { ...state, ...action.payload };\n    case FETCH_GENRES_LOADING:\n      return { ...state, loading: true };\n    case FETCH_GENRES_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIEDETAIL_LOADING,\n  FETCH_MOVIEDETAIL,\n  FETCH_MOVIEDETAIL_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIEDETAIL:\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIEDETAIL_LOADING:\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_MOVIEDETAIL_SUCCESS:\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIES_LOADING,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_ERROR,\n  FETCH_MOVIES_SEARCH,\n  FETCH_DISCOVER_LOADING,\n  FETCH_DISCOVER_SUCCESS,\n  FETCH_DISCOVER_ERROR,\n  FETCH_DISCOVER_SEARCH,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES_SEARCH:\n    case FETCH_DISCOVER_SEARCH:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIES_LOADING:\n    case FETCH_DISCOVER_LOADING:\n      return { ...state, loading: true };\n    case FETCH_DISCOVER_SUCCESS:\n    case FETCH_MOVIES_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_COLLECTION_LOADING,\n  FETCH_COLLECTION,\n  FETCH_COLLECTION_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COLLECTION:\n      return { ...state, ...action.payload };\n    case FETCH_COLLECTION_LOADING:\n      return { ...state, loading: true };\n    case FETCH_COLLECTION_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport genreReducer from './genreReducer';\nimport movieDetailReducer from './movieDetailReducer';\nimport moviesReducer from './moviesReducer';\nimport collectionReducer from './collectionReducer';\nimport trailersReducer from './trailersReducer';\n\nexport default combineReducers({\n  movies: moviesReducer,\n  trailers: trailersReducer,\n  genres: genreReducer,\n  collection: collectionReducer,\n  movieDetail: movieDetailReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './pages/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}