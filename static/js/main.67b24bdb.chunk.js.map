{"version":3,"sources":["components/SearchBar.jsx","components/MovieCard.jsx","components/MovieList.jsx","api/tmdb.js","actions/index.js","components/Loader.jsx","pages/Search.jsx","pages/Discovery.jsx","components/Discover.jsx","components/Cast.jsx","components/MovieDetail.jsx","pages/Movie.jsx","pages/App.jsx","reducers/genreReducer.js","reducers/movieDetailReducer.js","reducers/moviesReducer.js","reducers/collectionReducer.js","reducers/trailersReducer.js","reducers/relatedReducer.js","reducers/castReducer.js","reducers/index.js","index.js"],"names":["SearchWrapper","styled","div","Input","input","SearchBar","history","useHistory","useState","query","setQuery","onSubmit","e","preventDefault","push","placeholder","type","value","onChange","target","MovieCard","movie","Container","motion","Poster","img","Title","h1","whileHover","scale","to","id","src","poster_path","alt","title","Cards","MovieList","renderMovies","movies","map","axios","create","baseURL","params","api_key","FETCH_MOVIES_LOADING","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_SEARCH","FETCH_DISCOVER_LOADING","FETCH_DISCOVER_SUCCESS","FETCH_DISCOVER_SEARCH","FETCH_GENRES_LOADING","FETCH_GENRES","FETCH_GENRES_SUCCESS","FETCH_MOVIEDETAIL_LOADING","FETCH_MOVIEDETAIL","FETCH_MOVIEDETAIL_SUCCESS","FETCH_RELATED_LOADING","FETCH_RELATED","FETCH_RELATED_SUCCESS","FETCH_CAST_LOADING","FETCH_CAST","FETCH_CAST_SUCCESS","FETCH_COLLECTION_LOADING","FETCH_COLLECTION","FETCH_COLLECTION_SUCCESS","FETCH_TRAILERS_LOADING","FETCH_TRAILERS","FETCH_TRAILERS_SUCCESS","CLEAR_MOVIES","CLEAR_MOVIE","require","default","Loader","className","connect","state","getSearchedMovie","dispatch","a","tmdb","get","response","payload","data","clearMovies","props","searchedMovies","useParams","useEffect","loading","Helmet","toUpperCase","results","GenreList","ul","Subheader","span","genres","getDiscoverMovies","discover","getGenres","genreFilter","setGenreFilter","isFiltered","setIsFiltered","renderGenres","genre","filtered","name","onClick","filteredMovies","filter","genre_ids","includes","header","split","join","List","ListItem","li","Discover","activeClassName","Cast","actors","cast","actor","known_for_department","profile_path","MovieDetail","collection","trailers","relatedMovies","Tagline","h2","PosterContainer","Details","CollectionContainer","belongs_to_collection","original_title","backdrop_path","tagline","runtime","release_date","overview","Collection","parts","RelatedMovies","Math","floor","moment","format","trailer","href","key","movieDetail","related","getMovieDetails","getRelatedMovies","getCollection","getCast","clearMovie","getTrailers","createBrowserHistory","DiscoverWrapper","App","exact","path","initialState","error","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67b24bdb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 0 10% 5% 10%;\n  }\n`;\nconst Input = styled.input`\n  position: absolute;\n  bottom: -17px;\n\n  background: url('https://static.tumblr.com/ftv85bp/MIXmud4tx/search-icon.png')\n    no-repeat 9px center;\n  border: none;\n  padding: 9px 5px 9px 32px;\n  width: 30px;\n  color: transparent;\n  cursor: pointer;\n  outline: none;\n  border-radius: 10em;\n  transition: all 0.5s;\n\n  :focus {\n    border: solid 1px #ccc;\n    width: 160px;\n    padding-left: 32px;\n    color: #000;\n    background-color: #fff;\n    cursor: auto;\n  }\n\n  @media (max-width: 768px) {\n    border-radius: 1em;\n    border: solid 1px #ccc;\n    width: 100%;\n    padding-left: 32px;\n    color: #000;\n    background-color: #fff;\n    cursor: auto;\n\n    :focus {\n      border-radius: 1em;\n      border: solid 1px #ccc;\n      width: 100%;\n      padding-left: 32px;\n      color: #000;\n      background-color: #fff;\n      cursor: auto;\n    }\n  }\n`;\n\nconst SearchBar = () => {\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n\n  function handleSubmitForm(e) {\n    e.preventDefault();\n    if (query) {\n      history.push(`/moviesearch3/search/${query}`);\n      setQuery('');\n    }\n  }\n\n  return (\n    <SearchWrapper>\n      <form onSubmit={handleSubmitForm}>\n        <Input\n          key=\"query\"\n          placeholder=\"Search movie\"\n          type=\"search\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </form>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchBar;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst MovieCard = ({ movie }) => {\n  const Container = styled(motion.div)`\n    position: relative;\n    width: 40%;\n    max-width: 12rem;\n    max-height: 306px;\n\n    margin: 10px;\n    overflow: hidden;\n    background-size: cover;\n    transition: visibility ease-in-out 2ms;\n    background-color: gray;\n    border-radius: 20px;\n\n    display: flex;\n    justify-content: center;\n\n    a {\n      text-decoration: none;\n      color: white;\n    }\n    &:hover {\n      z-index: 1000;\n      box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n    }\n\n    &:hover #title {\n      visibility: visible;\n      opacity: 1;\n    }\n  `;\n\n  const Poster = styled.img`\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  `;\n\n  const Title = styled.h1`\n    position: absolute;\n    font-size: 1.5rem;\n    margin: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: 0;\n\n    padding: 10px;\n\n    background-image: linear-gradient(0deg, black, transparent);\n    overflow: hidden;\n    visibility: hidden;\n    opacity: 0;\n  `;\n\n  return (\n    <Container whileHover={{ scale: 1.05 }}>\n      <Link to={`/moviesearch3/movie/${movie.id}`}>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n\n        <Title id=\"title\">{movie.title}</Title>\n      </Link>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport MovieCard from './MovieCard';\n\nconst Cards = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst MovieList = ({ movies }) => {\n  const renderMovies = movies.map(movie => {\n    return <MovieCard movie={movie} />;\n  });\n\n  return <Cards>{renderMovies}</Cards>;\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '18693dbf2e013e193207cae1f0af5059',\n    // api_key: process.env.REACT_APP_API_KEY,\n  },\n});\n","import tmdb from '../api/tmdb';\n\nexport const FETCH_MOVIES_LOADING = 'FETCH_MOVIES_LOADING';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const FETCH_MOVIES_SEARCH = 'FETCH_MOVIES_SEARCH';\n\nexport const FETCH_DISCOVER_LOADING = 'FETCH_DISCOVER_LOADING';\nexport const FETCH_DISCOVER_SUCCESS = 'FETCH_DISCOVER_SUCCESS';\nexport const FETCH_DISCOVER_ERROR = 'FETCH_DISCOVER_ERROR';\nexport const FETCH_DISCOVER_SEARCH = 'FETCH_DISCOVER_SEARCH';\n\nexport const FETCH_GENRES_LOADING = 'FETCH_GENRES_LOADING';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\n\nexport const FETCH_MOVIEDETAIL_LOADING = 'FETCH_MOVIEDETAIL_LOADING';\nexport const FETCH_MOVIEDETAIL = 'FETCH_MOVIEDETAIL';\nexport const FETCH_MOVIEDETAIL_SUCCESS = 'FETCH_MOVIEDETAIL_SUCCESS';\n\nexport const FETCH_RELATED_LOADING = 'FETCH_RELATED_LOADING';\nexport const FETCH_RELATED = 'FETCH_RELATED';\nexport const FETCH_RELATED_SUCCESS = 'FETCH_RELATED_SUCCESS';\n\nexport const FETCH_CAST_LOADING = 'FETCH_CAST_LOADING';\nexport const FETCH_CAST = 'FETCH_CAST';\nexport const FETCH_CAST_SUCCESS = 'FETCH_CAST_SUCCESS';\n\nexport const FETCH_COLLECTION_LOADING = 'FETCH_COLLECTION_LOADING';\nexport const FETCH_COLLECTION = 'FETCH_COLLECTION';\nexport const FETCH_COLLECTION_SUCCESS = 'FETCH_COLLECTION_SUCCESS';\n\nexport const FETCH_TRAILERS_LOADING = 'FETCH_TRAILERS_LOADING';\nexport const FETCH_TRAILERS = 'FETCH_TRAILERS';\nexport const FETCH_TRAILERS_SUCCESS = 'FETCH_TRAILERS_SUCCESS';\n\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES';\nexport const CLEAR_MOVIE = 'CLEAR_MOVIE';\n\nexport const getSearchedMovie = query => async dispatch => {\n  dispatch({ type: FETCH_MOVIES_LOADING });\n  const response = await tmdb.get('/search/movie', {\n    params: { query: query },\n  });\n  await dispatch({\n    type: FETCH_MOVIES_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_MOVIES_SUCCESS,\n  });\n};\n\nexport const getDiscoverMovies = discover => async dispatch => {\n  dispatch({ type: FETCH_DISCOVER_LOADING });\n  const response = await tmdb.get(`/movie/${discover}`);\n  await dispatch({\n    type: FETCH_DISCOVER_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_DISCOVER_SUCCESS,\n  });\n};\n\nexport const getGenres = () => async dispatch => {\n  dispatch({ type: FETCH_GENRES_LOADING });\n  const response = await tmdb.get('/genre/movie/list');\n  await dispatch({\n    type: FETCH_GENRES,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_GENRES_SUCCESS,\n  });\n};\n\nexport const getMovieDetails = id => async dispatch => {\n  dispatch({ type: FETCH_MOVIEDETAIL_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}`);\n  await dispatch({ type: FETCH_MOVIEDETAIL, payload: response.data });\n\n  dispatch({ type: FETCH_MOVIEDETAIL_SUCCESS });\n};\n\nexport const getRelatedMovies = id => async dispatch => {\n  dispatch({ type: FETCH_RELATED_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}/similar`);\n  await dispatch({ type: FETCH_RELATED, payload: response.data });\n\n  dispatch({ type: FETCH_RELATED_SUCCESS });\n};\n\nexport const getCollection = id => async dispatch => {\n  dispatch({ type: FETCH_COLLECTION_LOADING });\n\n  const response = await tmdb.get(`/collection/${id}`);\n  await dispatch({ type: FETCH_COLLECTION, payload: response.data });\n\n  dispatch({ type: FETCH_COLLECTION_SUCCESS });\n};\n\nexport const getCast = id => async dispatch => {\n  dispatch({ type: FETCH_CAST_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}/credits`);\n  await dispatch({ type: FETCH_CAST, payload: response.data });\n\n  dispatch({ type: FETCH_CAST_SUCCESS });\n};\n\nexport const getTrailers = id => async dispatch => {\n  dispatch({ type: FETCH_TRAILERS_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}/videos`);\n  await dispatch({ type: FETCH_TRAILERS, payload: response.data });\n\n  dispatch({ type: FETCH_TRAILERS_SUCCESS });\n};\n\nexport const clearMovies = () => {\n  return { type: CLEAR_MOVIES };\n};\n\nexport const clearMovie = () => {\n  return { type: CLEAR_MOVIE };\n};\n","const { default: styled } = require('styled-components');\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n\n  .loader,\n  .loader:after {\n    border-radius: 50%;\n    width: 10em;\n    height: 10em;\n  }\n  .loader {\n    margin: 60px auto;\n    font-size: 10px;\n    position: relative;\n    text-indent: -9999em;\n    border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n    border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n    border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n    border-left: 1.1em solid #717171;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n    -webkit-animation: load8 1.1s infinite linear;\n    animation: load8 1.1s infinite linear;\n  }\n  @-webkit-keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <div className=\"loader\">Loading...</div>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MovieList from '../components/MovieList';\nimport { getSearchedMovie, clearMovies } from '../actions/index';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst Search = props => {\n  const { movies } = props;\n  const { searchedMovies } = useParams();\n\n  useEffect(() => {\n    props.getSearchedMovie(searchedMovies);\n    return () => props.clearMovies();\n  }, [searchedMovies]);\n\n  if (movies.loading) {\n    return <Loader />;\n  } else if (movies === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      // <Loader />\n      <div>\n        <Helmet>\n          <title>{`${searchedMovies} - search results`}</title>\n        </Helmet>\n        <h1>{searchedMovies.toUpperCase()}</h1>\n        <MovieList movies={movies.results} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies };\n};\n\nexport default connect(mapStateToProps, { getSearchedMovie, clearMovies })(\n  Search\n);\n","import MovieList from '../components/MovieList';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getDiscoverMovies } from '../actions';\nimport { getGenres } from '../actions';\nimport { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst GenreList = styled.ul`\n  width: 100%;\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  .genre-select {\n    font-size: 0.8rem;\n    background: none;\n    border: none;\n    box-shadow: none;\n    &:hover {\n      cursor: pointer;\n      color: grey;\n    }\n\n    @media (max-width: 768px) {\n      white-space: nowrap;\n      font-size: 1rem;\n      border: 1px solid #717171;\n      border-radius: 1.5rem;\n      padding: 5px 0.9rem;\n      margin: 10px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-wrap: nowrap;\n    overflow-y: hidden;\n\n    justify-content: flex-start;\n\n    .active {\n      color: #409cff;\n      border: 1px solid #409cff;\n\n      &:hover {\n        cursor: inherit;\n        color: #409cff;\n      }\n    }\n  }\n`;\n\nconst Subheader = styled.span`\n  font-size: 1rem;\n  color: gray;\n  margin-left: 5px;\n  font-weight: 400;\n`;\n\nconst Discovery = props => {\n  const [genreFilter, setGenreFilter] = useState({});\n  const [isFiltered, setIsFiltered] = useState(false);\n  const { discover } = useParams();\n\n  const renderGenres = props.genres.loading ? (\n    <div>Loading Genres</div>\n  ) : (\n    props.genres.genres.map(genre => {\n      const filtered = genreFilter.name == genre.name && isFiltered;\n      return (\n        <li key={genre.id}>\n          <button\n            className={`genre-select ${filtered ? 'active' : ''}`}\n            onClick={() => {\n              setIsFiltered(true);\n              setGenreFilter(genre);\n            }}\n          >\n            {genre.name}\n          </button>\n        </li>\n      );\n    })\n  );\n\n  const filteredMovies = props.movies.loading ? (\n    <Loader />\n  ) : (\n    props.movies.results.filter(movies =>\n      movies.genre_ids.includes(genreFilter.id)\n    )\n  );\n\n  const header = discover.split('_').join(' ').toUpperCase();\n\n  useEffect(() => {\n    props.getDiscoverMovies(discover);\n    props.getGenres();\n  }, [discover]);\n\n  if (props.movies.loading) {\n    return <Loader />;\n  } else if (props.movies.results === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      <div>\n        <Helmet>\n          <title>{header}</title>\n        </Helmet>\n        <h1>\n          {header}\n          <Subheader> {isFiltered && `> ${genreFilter.name}`}</Subheader>\n        </h1>\n        <div>\n          <GenreList>\n            <li>\n              <button\n                className=\"genre-select\"\n                onClick={() => setIsFiltered(false)}\n              >\n                All\n              </button>\n            </li>\n            {renderGenres}\n          </GenreList>\n        </div>\n\n        <MovieList\n          movies={isFiltered ? filteredMovies : props.movies.results}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies, genres: state.genres };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscoverMovies,\n  getGenres,\n})(Discovery);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 15px;\n  display: flex;\n  width: 30%;\n  justify-content: space-around;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst ListItem = styled.li`\n  transition: all 0.25s;\n  font-size: 0.9rem;\n  font-weight: 300;\n  a {\n    color: black;\n    text-decoration: none;\n  }\n  a:visited {\n    color: black;\n  }\n\n  &:hover {\n    color: grey;\n  }\n  .active {\n    color: black;\n    font-weight: 500;\n    cursor: default;\n\n    &:hover {\n      color: black;\n    }\n  }\n`;\n\nconst Discover = () => {\n  return (\n    <List>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/upcoming\">\n          Upcoming\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/top_rated\">\n          Top Rated\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/popular\">\n          Popular\n        </NavLink>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default Discover;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 90%;\n\n  .cast-list {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    display: flex;\n    overflow-y: hidden;\n  }\n\n  .cast-item {\n    width: 100px;\n    height: 100px;\n    margin: 10px;\n  }\n\n  .cast-img {\n    border-radius: 10px;\n    height: 100%;\n    width: auto;\n  }\n`;\n\nconst Cast = ({ cast }) => {\n  const actors = cast.cast.filter(\n    actor => actor.known_for_department === 'Acting'\n  );\n\n  return (\n    <Container>\n      <h1 className=\"title\">Cast</h1>\n      <ul className=\"cast-list\">\n        {actors.map(actor => (\n          <li key={actor.id} className=\"cast-item\">\n            <img\n              className=\"cast-img\"\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n              alt=\"\"\n            />\n          </li>\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport moment from 'moment';\nimport MovieList from './MovieList';\nimport Cast from './Cast';\n\nconst MovieDetail = ({ movie, collection, trailers, relatedMovies, cast }) => {\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n  `;\n\n  const Tagline = styled.h2`\n    font-size: 3rem;\n    margin: 1rem;\n  `;\n\n  const PosterContainer = styled.div`\n    max-width: 80%;\n    margin-bottom: 5%;\n\n    @media (max-width: 768px) {\n      align-self: flex-start;\n      width: 100vw;\n      border-radius: 0;\n      box-shadow: none;\n    }\n  `;\n\n  const Poster = styled.img`\n    width: 100%;\n    height: auto;\n    border-radius: 20px;\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n\n    @media (max-width: 768px) {\n      width: 100vw;\n      border-radius: 0;\n      box-shadow: none;\n    }\n  `;\n\n  const Details = styled.div`\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    \n    .movie-detail {\n        @media (max-width: 768px) {\n        \n      }\n    }\n\n    .movie-detail__title {\n      font-size: 2.5rem;\n      margin: 10px 0 5px 0;\n  }\n\n\n    .movie-detail__meta {\n      \n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    color #717171;\n    }\n\n    .movie-genres {\n      list-style-type: none;\n      display: flex;\n      flex-wrap: wrap;\n      padding: 0;\n      line-height: 1.5rem;\n    }\n\n    .genre {\n      font-weight: 500;\n      padding: 0 15px 0 0;\n    }\n\n    .info-time{\n      display: flex;\n    }\n\n    .info-detail {\n      margin: 0 10px;\n    }\n\n    .poster {\n      max-width: 80%;\n      border-radius: 20px;\n    }\n\n  .movie-detail__overview {\n    font-weight: 300;\n    line-height: 1.5rem;\n    text-align: justify;\n\n  }\n\n  .trailer-videos {\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n\n  }\n\n  .trailer-video {\n    margin: 10px 10px 0 0 ;\n  }\n\n  .trailer-video__thumbnail {\n      border-radius: 20px;\n      transition: all 0.25s;\n\n      &:hover {\n        scale: 1.05;\n        z-index: 1000;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n      }\n  }\n\n    @media (max-width: 768px) {\n      display: flex;\n      .poster {\n        display: none;\n      }\n\n      .info-time {\n        width: 100%;\n        margin: 0;\n      }\n\n      .info-detail {\n        margin-left: 0;\n      }\n    }\n  `;\n\n  const CollectionContainer = styled.div`\n    width: 90%;\n  `;\n\n  const {\n    belongs_to_collection,\n    genres,\n    original_title,\n    backdrop_path,\n    poster_path,\n    tagline,\n    runtime,\n    release_date,\n    overview,\n    title,\n  } = movie;\n\n  const Collection = () => {\n    if (belongs_to_collection) {\n      if (collection.loading) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <CollectionContainer>\n            <h1 className=\"title\">Collection</h1>\n            <MovieList id=\"collections\" movies={collection.parts} />\n          </CollectionContainer>\n        );\n      }\n    } else {\n      return '';\n    }\n  };\n\n  const RelatedMovies = () => {\n    return (\n      <CollectionContainer>\n        <h1 className=\"title\">Related Movies</h1>\n        <MovieList id=\"collections\" movies={relatedMovies.results} />\n      </CollectionContainer>\n    );\n  };\n\n  return (\n    <Container>\n      <Tagline>{tagline}</Tagline>\n      <PosterContainer>\n        <Poster\n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n          alt={`${original_title} poster`}\n        />\n      </PosterContainer>\n      <Details>\n        <img\n          className=\"poster\"\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt=\"\"\n        />\n\n        <div className=\"movie-detail\">\n          <h1 className=\"movie-detail__title\">{title}</h1>\n\n          <div className=\"movie-detail__meta\">\n            <ul className=\"movie-genres\">\n              {genres.map(genre => {\n                return <li className=\"genre\">{genre.name}</li>;\n              })}\n            </ul>\n            <div className=\"info-time\">\n              <p className=\"info-detail\">\n                {`${Math.floor(runtime / 60)} h ${runtime % 60} min`}\n              </p>\n              <p className=\"info-detail\">\n                {moment(release_date).format('MMMM Do, YYYY')}\n              </p>\n            </div>\n          </div>\n\n          <p className=\"movie-detail__overview\">{overview}</p>\n          <div className=\"movie-detail__trailers\">\n            <h2 className=\"trailer-title\">Trailers</h2>\n            <ul className=\"trailer-videos\">\n              {trailers.map(trailer => {\n                return (\n                  <li className=\"trailer-video\" key={trailer.id}>\n                    <a href={`https://www.youtube.com/watch?v=${trailer.key}`}>\n                      <img\n                        className=\"trailer-video__thumbnail\"\n                        src={`https://img.youtube.com/vi/${trailer.key}/1.jpg`}\n                        alt=\"\"\n                      />\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </Details>\n      <Collection />\n      <Cast cast={cast} />\n      <RelatedMovies />\n    </Container>\n  );\n};\n\nexport default MovieDetail;\n","import MovieDetail from '../components/MovieDetail';\nimport { connect } from 'react-redux';\nimport {\n  getMovieDetails,\n  clearMovie,\n  getCollection,\n  getTrailers,\n  getRelatedMovies,\n  getCast,\n} from '../actions';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: center;\n  justify-content: space-around;\n`;\n\nconst Movie = props => {\n  const { movie, collection, trailers, related, cast } = props;\n\n  const { id } = useParams();\n  useEffect(() => {\n    props.getMovieDetails(id);\n    props.getTrailers(id);\n    props.getRelatedMovies(id);\n    props.getCast(id);\n\n    return () => {\n      props.clearMovie();\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (movie.belongs_to_collection) {\n      props.getCollection(movie.belongs_to_collection.id);\n    }\n  }, [movie]);\n\n  if (movie.loading && collection.loading && trailers.loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Container>\n        <Helmet>\n          <title>{movie.title}</title>\n        </Helmet>\n        <MovieDetail\n          movie={movie}\n          collection={collection}\n          trailers={trailers.results.filter(\n            trailer => trailer.type === 'Trailer'\n          )}\n          relatedMovies={related}\n          cast={cast}\n        />\n      </Container>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movieDetail,\n    collection: state.collection,\n    trailers: state.trailers,\n    related: state.related,\n    cast: state.cast,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMovieDetails,\n  getRelatedMovies,\n  getCollection,\n  getCast,\n  clearMovie,\n  getTrailers,\n})(Movie);\n","import SearchBar from '../components/SearchBar';\nimport { Redirect, Route, Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Search from './Search';\nimport Discovery from './Discovery';\nimport Discover from '../components/Discover';\nimport Movie from './Movie';\n\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst history = createBrowserHistory();\n\nconst Container = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n`;\n\nconst DiscoverWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Router history={history}>\n        <DiscoverWrapper>\n          <Discover />\n          <SearchBar />\n        </DiscoverWrapper>\n        <Route exact path=\"/\">\n          <Redirect to=\"/moviesearch3/discover/popular\" />\n        </Route>\n        <Route exact path=\"/moviesearch3\">\n          <Redirect to=\"/moviesearch3/discover/popular\" />\n        </Route>\n        <Route exact path=\"/moviesearch3/search/:searchedMovies\">\n          <Search />\n        </Route>\n        <Route exact path=\"/moviesearch3/movie/:id\">\n          <Movie />\n        </Route>\n        <Route exact path=\"/moviesearch3/discover/:discover\">\n          <Discovery />\n        </Route>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import {\n  FETCH_GENRES_LOADING,\n  FETCH_GENRES,\n  FETCH_GENRES_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: false,\n  genres: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_GENRES:\n      return { ...state, ...action.payload };\n    case FETCH_GENRES_LOADING:\n      return { ...state, loading: true };\n    case FETCH_GENRES_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIEDETAIL_LOADING,\n  FETCH_MOVIEDETAIL,\n  FETCH_MOVIEDETAIL_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n  CLEAR_MOVIE,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  genres: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIEDETAIL:\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIEDETAIL_LOADING:\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_MOVIEDETAIL_SUCCESS:\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIES_LOADING,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_ERROR,\n  FETCH_MOVIES_SEARCH,\n  FETCH_DISCOVER_LOADING,\n  FETCH_DISCOVER_SUCCESS,\n  FETCH_DISCOVER_ERROR,\n  FETCH_DISCOVER_SEARCH,\n  CLEAR_MOVIES,\n  FETCH_RELATED_LOADING,\n  FETCH_RELATED,\n  FETCH_RELATED_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  results: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES_SEARCH:\n    case FETCH_DISCOVER_SEARCH:\n    case FETCH_RELATED:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIES_LOADING:\n    case FETCH_DISCOVER_LOADING:\n    case FETCH_RELATED_LOADING:\n      return { ...state, loading: true };\n    case FETCH_DISCOVER_SUCCESS:\n    case FETCH_MOVIES_SUCCESS:\n    case FETCH_RELATED_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIES:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_COLLECTION_LOADING,\n  FETCH_COLLECTION,\n  FETCH_COLLECTION_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COLLECTION:\n      return { ...state, ...action.payload };\n    case FETCH_COLLECTION_LOADING:\n      return { ...state, loading: true };\n    case FETCH_COLLECTION_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n  CLEAR_MOVIE,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  results: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_RELATED_LOADING,\n  FETCH_RELATED,\n  FETCH_RELATED_SUCCESS,\n  CLEAR_MOVIES,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  results: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_RELATED:\n      return { ...state, ...action.payload };\n    case FETCH_RELATED_LOADING:\n      return { ...state, loading: true };\n    case FETCH_RELATED_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIES:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_CAST_LOADING,\n  FETCH_CAST,\n  FETCH_CAST_SUCCESS,\n} from '../actions/index';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  cast: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CAST:\n      return { ...state, ...action.payload };\n    case FETCH_CAST_LOADING:\n      return { ...state, loading: true };\n    case FETCH_CAST_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport genreReducer from './genreReducer';\nimport movieDetailReducer from './movieDetailReducer';\nimport moviesReducer from './moviesReducer';\nimport collectionReducer from './collectionReducer';\nimport trailersReducer from './trailersReducer';\nimport relatedReducer from './relatedReducer';\nimport castReducer from './castReducer';\n\nexport default combineReducers({\n  movies: moviesReducer,\n  trailers: trailersReducer,\n  genres: genreReducer,\n  collection: collectionReducer,\n  movieDetail: movieDetailReducer,\n  related: relatedReducer,\n  cast: castReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\n\nimport App from './pages/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}