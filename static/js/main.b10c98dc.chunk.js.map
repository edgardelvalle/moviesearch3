{"version":3,"sources":["components/SearchBar.jsx","components/MovieCard.jsx","components/MovieList.jsx","api/tmdb.js","actions/index.js","components/Loader.jsx","pages/Search.jsx","pages/Discovery.jsx","components/Discover.jsx","components/MovieDetail.jsx","pages/Movie.jsx","pages/App.jsx","reducers/genreReducer.js","reducers/movieDetailReducer.js","reducers/moviesReducer.js","reducers/collectionReducer.js","reducers/trailersReducer.js","reducers/index.js","index.js"],"names":["SearchWrapper","styled","div","Input","input","SearchBar","history","useHistory","useState","query","setQuery","onSubmit","e","preventDefault","push","placeholder","type","value","onChange","target","MovieCard","movie","Container","motion","Poster","img","Title","h1","whileHover","scale","to","id","src","poster_path","alt","title","Cards","MovieList","renderMovies","movies","map","axios","create","baseURL","params","api_key","FETCH_MOVIES_LOADING","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_SEARCH","FETCH_DISCOVER_LOADING","FETCH_DISCOVER_SUCCESS","FETCH_DISCOVER_SEARCH","FETCH_GENRES_LOADING","FETCH_GENRES","FETCH_GENRES_SUCCESS","FETCH_MOVIEDETAIL_LOADING","FETCH_MOVIEDETAIL","FETCH_MOVIEDETAIL_SUCCESS","FETCH_COLLECTION_LOADING","FETCH_COLLECTION","FETCH_COLLECTION_SUCCESS","FETCH_TRAILERS_LOADING","FETCH_TRAILERS","FETCH_TRAILERS_SUCCESS","CLEAR_MOVIES","CLEAR_MOVIE","require","default","Loader","className","connect","state","getSearchedMovie","dispatch","a","tmdb","get","response","payload","data","clearMovies","props","searchedMovies","useParams","useEffect","loading","Helmet","toUpperCase","results","GenreList","ul","Subheader","span","genres","getDiscoverMovies","discover","getGenres","genreFilter","setGenreFilter","isFiltered","setIsFiltered","renderGenres","genre","name","onClick","filteredMovies","filter","genre_ids","includes","header","split","join","List","ListItem","li","Discover","activeClassName","MovieDetail","collection","trailers","Tagline","h2","PosterContainer","Details","CollectionContainer","belongs_to_collection","original_title","backdrop_path","tagline","runtime","release_date","overview","Collection","parts","Math","floor","moment","format","trailer","href","key","movieDetail","getMovieDetails","getCollection","clearMovie","getTrailers","createBrowserHistory","DiscoverWrapper","App","exact","path","initialState","error","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b10c98dc.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 0 10% 5% 0;\n  }\n`;\nconst Input = styled.input`\n  position: absolute;\n  bottom: -17px;\n\n  background: url('https://static.tumblr.com/ftv85bp/MIXmud4tx/search-icon.png')\n    no-repeat 9px center;\n  border: none;\n  padding: 9px 5px 9px 32px;\n  width: 30px;\n  color: transparent;\n  cursor: pointer;\n  outline: none;\n  border-radius: 10em;\n  transition: all 0.5s;\n\n  :focus {\n    border: solid 1px #ccc;\n    width: 160px;\n    padding-left: 32px;\n    color: #000;\n    background-color: #fff;\n    cursor: auto;\n  }\n`;\n\nconst SearchBar = () => {\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n\n  function handleSubmitForm(e) {\n    e.preventDefault();\n    if (query) {\n      history.push(`/moviesearch3/search/${query}`);\n      setQuery('');\n    }\n  }\n\n  return (\n    <SearchWrapper>\n      <form onSubmit={handleSubmitForm}>\n        <Input\n          key=\"query\"\n          placeholder=\"Search movie\"\n          type=\"search\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </form>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchBar;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst MovieCard = ({ movie }) => {\n  const Container = styled(motion.div)`\n    position: relative;\n    width: 40%;\n    max-width: 12rem;\n    max-height: 306px;\n\n    margin: 10px;\n    overflow: hidden;\n    background-size: cover;\n    transition: visibility ease-in-out 2ms;\n    background-color: gray;\n    border-radius: 20px;\n\n    display: flex;\n    justify-content: center;\n\n    a {\n      text-decoration: none;\n      color: white;\n    }\n    &:hover {\n      z-index: 1000;\n      box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n    }\n\n    &:hover #title {\n      visibility: visible;\n      opacity: 1;\n    }\n  `;\n\n  const Poster = styled.img`\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  `;\n\n  const Title = styled.h1`\n    position: absolute;\n    font-size: 1.5rem;\n    margin: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: 0;\n\n    padding: 10px;\n\n    background-image: linear-gradient(0deg, black, transparent);\n    overflow: hidden;\n    visibility: hidden;\n    opacity: 0;\n  `;\n\n  return (\n    <Container whileHover={{ scale: 1.05 }}>\n      <Link to={`/moviesearch3/movie/${movie.id}`}>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n\n        <Title id=\"title\">{movie.title}</Title>\n      </Link>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport MovieCard from './MovieCard';\n\nconst Cards = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nconst MovieList = ({ movies }) => {\n  const renderMovies = movies.map(movie => {\n    return <MovieCard movie={movie} />;\n  });\n\n  return <Cards>{renderMovies}</Cards>;\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '18693dbf2e013e193207cae1f0af5059',\n    // api_key: process.env.REACT_APP_API_KEY,\n  },\n});\n","import tmdb from '../api/tmdb';\n\nexport const FETCH_MOVIES_LOADING = 'FETCH_MOVIES_LOADING';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const FETCH_MOVIES_SEARCH = 'FETCH_MOVIES_SEARCH';\n\nexport const FETCH_DISCOVER_LOADING = 'FETCH_DISCOVER_LOADING';\nexport const FETCH_DISCOVER_SUCCESS = 'FETCH_DISCOVER_SUCCESS';\nexport const FETCH_DISCOVER_ERROR = 'FETCH_DISCOVER_ERROR';\nexport const FETCH_DISCOVER_SEARCH = 'FETCH_DISCOVER_SEARCH';\n\nexport const FETCH_GENRES_LOADING = 'FETCH_GENRES_LOADING';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\n\nexport const FETCH_MOVIEDETAIL_LOADING = 'FETCH_MOVIEDETAIL_LOADING';\nexport const FETCH_MOVIEDETAIL = 'FETCH_MOVIEDETAIL';\nexport const FETCH_MOVIEDETAIL_SUCCESS = 'FETCH_MOVIEDETAIL_SUCCESS';\n\nexport const FETCH_COLLECTION_LOADING = 'FETCH_COLLECTION_LOADING';\nexport const FETCH_COLLECTION = 'FETCH_COLLECTION';\nexport const FETCH_COLLECTION_SUCCESS = 'FETCH_COLLECTION_SUCCESS';\n\nexport const FETCH_TRAILERS_LOADING = 'FETCH_TRAILERS_LOADING';\nexport const FETCH_TRAILERS = 'FETCH_TRAILERS';\nexport const FETCH_TRAILERS_SUCCESS = 'FETCH_TRAILERS_SUCCESS';\n\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES';\nexport const CLEAR_MOVIE = 'CLEAR_MOVIE';\n\nexport const getSearchedMovie = query => async dispatch => {\n  dispatch({ type: FETCH_MOVIES_LOADING });\n  const response = await tmdb.get('/search/movie', {\n    params: { query: query },\n  });\n  await dispatch({\n    type: FETCH_MOVIES_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_MOVIES_SUCCESS,\n  });\n};\n\nexport const getDiscoverMovies = discover => async dispatch => {\n  dispatch({ type: FETCH_DISCOVER_LOADING });\n  const response = await tmdb.get(`/movie/${discover}`);\n  await dispatch({\n    type: FETCH_DISCOVER_SEARCH,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_DISCOVER_SUCCESS,\n  });\n};\n\nexport const getGenres = () => async dispatch => {\n  dispatch({ type: FETCH_GENRES_LOADING });\n  const response = await tmdb.get('/genre/movie/list');\n  await dispatch({\n    type: FETCH_GENRES,\n    payload: response.data,\n  });\n  dispatch({\n    type: FETCH_GENRES_SUCCESS,\n  });\n};\n\nexport const getMovieDetails = id => async dispatch => {\n  dispatch({ type: FETCH_MOVIEDETAIL_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}`);\n  await dispatch({ type: FETCH_MOVIEDETAIL, payload: response.data });\n\n  dispatch({ type: FETCH_MOVIEDETAIL_SUCCESS });\n};\n\nexport const getCollection = id => async dispatch => {\n  dispatch({ type: FETCH_COLLECTION_LOADING });\n\n  const response = await tmdb.get(`/collection/${id}`);\n  await dispatch({ type: FETCH_COLLECTION, payload: response.data });\n\n  dispatch({ type: FETCH_COLLECTION_SUCCESS });\n};\n\nexport const getTrailers = id => async dispatch => {\n  dispatch({ type: FETCH_TRAILERS_LOADING });\n\n  const response = await tmdb.get(`/movie/${id}/videos`);\n  await dispatch({ type: FETCH_TRAILERS, payload: response.data });\n\n  dispatch({ type: FETCH_TRAILERS_SUCCESS });\n};\n\nexport const clearMovies = () => {\n  return { type: CLEAR_MOVIES };\n};\n\nexport const clearMovie = () => {\n  return { type: CLEAR_MOVIE };\n};\n","const { default: styled } = require('styled-components');\n\nconst Container = styled.div`\n  div {\n    display: inline-block;\n    background-color: black;\n    height: 10px;\n    width: 10px;\n    border-radius: 10px;\n    margin: 10px;\n  }\n\n  @keyframes jump {\n    from {\n      transform: translateY(0);\n    }\n    from {\n      transform: translateY(10);\n    }\n  }\n\n  .dot {\n    position: relative;\n  }\n\n  .dot-one {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n\n  .dot-two {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n  .dot-three {\n    transform: translateY(0);\n    animation-name: jump;\n    animation-duration: 3s;\n  }\n`;\n\nconst Loader = () => {\n  return (\n    <Container className=\"dot-array\">\n      <div className=\"dot dot-one\"></div>\n      <div className=\"dot dot-two\"></div>\n      <div className=\"dot dot-three\"></div>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MovieList from '../components/MovieList';\nimport { getSearchedMovie, clearMovies } from '../actions/index';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst Search = props => {\n  const { movies } = props;\n  const { searchedMovies } = useParams();\n\n  useEffect(() => {\n    props.getSearchedMovie(searchedMovies);\n    return () => props.clearMovies();\n  }, [searchedMovies]);\n\n  if (movies.loading) {\n    return <Loader />;\n  } else if (movies === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      // <Loader />\n      <div>\n        <Helmet>\n          <title>{`${searchedMovies} - search results`}</title>\n        </Helmet>\n        <h1>{searchedMovies.toUpperCase()}</h1>\n        <MovieList movies={movies.results} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies };\n};\n\nexport default connect(mapStateToProps, { getSearchedMovie, clearMovies })(\n  Search\n);\n","import MovieList from '../components/MovieList';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getDiscoverMovies } from '../actions';\nimport { getGenres } from '../actions';\nimport { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport Loader from '../components/Loader';\nimport { Helmet } from 'react-helmet';\n\nconst GenreList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  button {\n    font-size: 0.8rem;\n    background: none;\n    border: none;\n    box-shadow: none;\n    &:hover {\n      cursor: pointer;\n      color: grey;\n    }\n  }\n`;\n\nconst Subheader = styled.span`\n  font-size: 1rem;\n  color: gray;\n  margin-left: 5px;\n  font-weight: 400;\n`;\n\nconst Discovery = props => {\n  const [genreFilter, setGenreFilter] = useState({});\n  const [isFiltered, setIsFiltered] = useState(false);\n  const { discover } = useParams();\n\n  const renderGenres = props.genres.loading ? (\n    <div>Loading Genres</div>\n  ) : (\n    props.genres.genres.map(genre => (\n      <li key={genre.id}>\n        <button\n          className={genreFilter.name == genre.name ? 'active' : ''}\n          onClick={() => {\n            setIsFiltered(true);\n            setGenreFilter(genre);\n          }}\n        >\n          {genre.name}\n        </button>\n      </li>\n    ))\n  );\n\n  const filteredMovies = props.movies.loading ? (\n    <Loader />\n  ) : (\n    props.movies.results.filter(movies =>\n      movies.genre_ids.includes(genreFilter.id)\n    )\n  );\n\n  const header = discover.split('_').join(' ').toUpperCase();\n\n  useEffect(() => {\n    props.getDiscoverMovies(discover);\n    props.getGenres();\n  }, [discover]);\n\n  if (props.movies.loading) {\n    return <Loader />;\n  } else if (props.movies.results === 0) {\n    return <div>No movies found</div>;\n  } else {\n    return (\n      <div>\n        <Helmet>\n          <title>{header}</title>\n        </Helmet>\n        <h1>\n          {header}\n          <Subheader> {isFiltered && `> ${genreFilter.name}`}</Subheader>\n        </h1>\n        <div>\n          <GenreList>\n            <li>\n              <button onClick={() => setIsFiltered(false)}>All</button>\n            </li>\n            {renderGenres}\n          </GenreList>\n        </div>\n\n        <MovieList\n          movies={isFiltered ? filteredMovies : props.movies.results}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { movies: state.movies, genres: state.genres };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscoverMovies,\n  getGenres,\n})(Discovery);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 15px;\n  display: flex;\n  width: 30%;\n  justify-content: space-around;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst ListItem = styled.li`\n  transition: all 0.25s;\n  font-size: 0.9rem;\n  font-weight: 300;\n  a {\n    color: black;\n    text-decoration: none;\n  }\n  a:visited {\n    color: black;\n  }\n\n  &:hover {\n    color: grey;\n  }\n  .active {\n    color: black;\n    font-weight: 500;\n    cursor: default;\n\n    &:hover {\n      color: black;\n    }\n  }\n`;\n\nconst Discover = () => {\n  return (\n    <List>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/upcoming\">\n          Upcoming\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/top_rated\">\n          Top Rated\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink activeClassName=\"active\" to=\"/moviesearch3/discover/popular\">\n          Popular\n        </NavLink>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default Discover;\n","import styled from 'styled-components';\nimport moment from 'moment';\nimport MovieList from './MovieList';\n\nconst MovieDetail = ({ movie, collection, trailers }) => {\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n  `;\n\n  const Tagline = styled.h2`\n    font-size: 3rem;\n    margin: 2rem 0;\n  `;\n\n  const PosterContainer = styled.div`\n    max-width: 80%;\n\n    @media (max-width: 768px) {\n      align-self: flex-start;\n      width: 100vw;\n      border-radius: 0;\n      box-shadow: none;\n    }\n  `;\n\n  const Poster = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n\n    @media (max-width: 768px) {\n      width: 100vw;\n      border-radius: 0;\n      box-shadow: none;\n    }\n  `;\n\n  const Details = styled.div`\n    margin: 5% 10%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    \n    .movie-detail {\n      @media (max-width: 768px) {\n      margin: 0 5%;\n    }\n    }\n\n    .movie-detail__title {\n      font-size: 2.5rem;\n  }\n\n\n    .movie-detail__meta {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    color #717171;\n    }\n\n    .movie-genres {\n      list-style-type: none;\n      display: flex;\n      padding: 0;\n    }\n\n    .genre {\n      padding: 0 10px;\n    }\n\n    .info-detail {\n      margin: 0 10px;\n    }\n\n    .poster {\n      max-width: 80%;\n      border-radius: 20px;\n    }\n\n  .movie-detail__overview {\n    font-weight: 300;\n    line-height: 1.5rem;\n    text-align: justify;\n\n  }\n\n  .trailer-videos {\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n\n  }\n\n  .trailer-video {\n    margin: 10px 10px 0 0 ;\n  }\n\n  .trailer-video__thumbnail {\n      border-radius: 20px;\n      transition: all 0.25s;\n\n      &:hover {\n        scale: 1.05;\n        z-index: 1000;\n        box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n          0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n          0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n          0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12);\n      }\n  }\n\n    .info-time{\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      p:first-child {\n        padding-right: 10px;\n        border-right: 1px solid #ccc;\n        margin-right: 10px;\n      }\n    }\n\n    @media (max-width: 768px) {\n      display: flex;\n      width: 100vw;\n\n      .poster {\n        display: none;\n      }\n\n      .info-time {\n        display: flex;\n        margin: 0;\n        flex-direction: row;\n        p:first-child {\n          border-right: 1px solid #717171;\n          padding-right: 10px;\n          margin-right: 10px;\n        }\n      }\n    }\n  `;\n\n  const CollectionContainer = styled.div`\n    width: 100%;\n    justify-content: flex-start;\n  `;\n\n  const {\n    belongs_to_collection,\n    genres,\n    original_title,\n    backdrop_path,\n    poster_path,\n    tagline,\n    runtime,\n    release_date,\n    overview,\n    title,\n  } = movie;\n\n  const Collection = () => {\n    if (belongs_to_collection) {\n      if (collection.loading) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <CollectionContainer>\n            <h1 className=\"title\">Collection</h1>\n            <MovieList id=\"collections\" movies={collection.parts} />\n          </CollectionContainer>\n        );\n      }\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <Container>\n      <Tagline>{tagline}</Tagline>\n      <PosterContainer>\n        <Poster\n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n          alt={`${original_title} poster`}\n        />\n      </PosterContainer>\n\n      <Details>\n        <img\n          className=\"poster\"\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt=\"\"\n        />\n\n        <div className=\"movie-detail\">\n          <h1 className=\"movie-detail__title\">{title}</h1>\n\n          <div className=\"movie-detail__meta\">\n            <ul className=\"movie-genres\">\n              {genres.map(genre => {\n                return <li className=\"genre\">{genre.name}</li>;\n              })}\n            </ul>\n            <p className=\"info-detail\">\n              {`${Math.floor(runtime / 60)} h ${runtime % 60} min`}\n            </p>\n            <p className=\"info-detail\">\n              {moment(release_date).format('MMMM Do, YYYY')}\n            </p>\n          </div>\n\n          <p className=\"movie-detail__overview\">{overview}</p>\n          <div className=\"movie-detail__trailers\">\n            <h2 className=\"trailer-title\">Trailers</h2>\n            <ul className=\"trailer-videos\">\n              {trailers.map(trailer => {\n                return (\n                  <li className=\"trailer-video\" key={trailer.id}>\n                    <a href={`https://www.youtube.com/watch?v=${trailer.key}`}>\n                      <img\n                        className=\"trailer-video__thumbnail\"\n                        src={`https://img.youtube.com/vi/${trailer.key}/1.jpg`}\n                        alt=\"\"\n                      />\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </Details>\n\n      <Collection />\n    </Container>\n  );\n};\n\nexport default MovieDetail;\n","import MovieDetail from '../components/MovieDetail';\nimport { connect } from 'react-redux';\nimport {\n  getMovieDetails,\n  clearMovie,\n  getCollection,\n  getTrailers,\n} from '../actions';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: center;\n  justify-content: space-around;\n`;\n\nconst Movie = props => {\n  const { movie, collection, trailers } = props;\n  const { id } = useParams();\n  useEffect(() => {\n    props.getMovieDetails(id);\n    props.getTrailers(id);\n    props.clearMovie();\n  }, [id]);\n\n  useEffect(() => {\n    if (movie.belongs_to_collection) {\n      props.getCollection(movie.belongs_to_collection.id);\n    }\n  }, [movie]);\n\n  if (movie.loading && collection.loading && trailers.loading) {\n    return (\n      <Container>\n        <Loader />\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <Helmet>\n          <title>{movie.title}</title>\n        </Helmet>\n        <MovieDetail\n          movie={movie}\n          collection={collection}\n          trailers={trailers.results.filter(\n            trailer => trailer.type === 'Trailer'\n          )}\n        />\n      </Container>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movieDetail,\n    collection: state.collection,\n    trailers: state.trailers,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMovieDetails,\n  getCollection,\n  clearMovie,\n  getTrailers,\n})(Movie);\n","import SearchBar from '../components/SearchBar';\nimport { Redirect, Route, Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Search from './Search';\nimport Discovery from './Discovery';\nimport Discover from '../components/Discover';\nimport Movie from './Movie';\n\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nconst history = createBrowserHistory();\n\nconst Container = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n`;\n\nconst DiscoverWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Router history={history}>\n        <DiscoverWrapper>\n          <Discover />\n          <SearchBar />\n        </DiscoverWrapper>\n\n        <Route exact path=\"/\">\n          <Redirect to=\"/moviesearch3\" />\n        </Route>\n        <Route exact path=\"/moviesearch3\">\n          <Redirect to=\"/moviesearch3/discover/popular\" />\n        </Route>\n        <Route exact path=\"/moviesearch3/search/:searchedMovies\">\n          <Search />\n        </Route>\n        <Route exact path=\"/moviesearch3/movie/:id\">\n          <Movie />\n        </Route>\n        <Route exact path=\"/moviesearch3/discover/:discover\">\n          <Discovery />\n        </Route>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import {\n  FETCH_GENRES_LOADING,\n  FETCH_GENRES,\n  FETCH_GENRES_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: false,\n  genres: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_GENRES:\n      return { ...state, ...action.payload };\n    case FETCH_GENRES_LOADING:\n      return { ...state, loading: true };\n    case FETCH_GENRES_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIEDETAIL_LOADING,\n  FETCH_MOVIEDETAIL,\n  FETCH_MOVIEDETAIL_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n  CLEAR_MOVIE,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  genres: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIEDETAIL:\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIEDETAIL_LOADING:\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_MOVIEDETAIL_SUCCESS:\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIES_LOADING,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_ERROR,\n  FETCH_MOVIES_SEARCH,\n  FETCH_DISCOVER_LOADING,\n  FETCH_DISCOVER_SUCCESS,\n  FETCH_DISCOVER_ERROR,\n  FETCH_DISCOVER_SEARCH,\n  CLEAR_MOVIES,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  results: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES_SEARCH:\n    case FETCH_DISCOVER_SEARCH:\n      return { ...state, ...action.payload };\n    case FETCH_MOVIES_LOADING:\n    case FETCH_DISCOVER_LOADING:\n      return { ...state, loading: true };\n    case FETCH_DISCOVER_SUCCESS:\n    case FETCH_MOVIES_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIES:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_COLLECTION_LOADING,\n  FETCH_COLLECTION,\n  FETCH_COLLECTION_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COLLECTION:\n      return { ...state, ...action.payload };\n    case FETCH_COLLECTION_LOADING:\n      return { ...state, loading: true };\n    case FETCH_COLLECTION_SUCCESS:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_TRAILERS,\n  FETCH_TRAILERS_SUCCESS,\n  FETCH_TRAILERS_LOADING,\n  CLEAR_MOVIE,\n} from '../actions';\n\nconst initialState = {\n  loading: true,\n  error: null,\n  results: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TRAILERS:\n      return { ...state, ...action.payload };\n    case FETCH_TRAILERS_LOADING:\n      return { ...state, loading: true };\n    case FETCH_TRAILERS_SUCCESS:\n      return { ...state, loading: false };\n    case CLEAR_MOVIE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport genreReducer from './genreReducer';\nimport movieDetailReducer from './movieDetailReducer';\nimport moviesReducer from './moviesReducer';\nimport collectionReducer from './collectionReducer';\nimport trailersReducer from './trailersReducer';\n\nexport default combineReducers({\n  movies: moviesReducer,\n  trailers: trailersReducer,\n  genres: genreReducer,\n  collection: collectionReducer,\n  movieDetail: movieDetailReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './pages/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}